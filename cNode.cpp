#include <iostream>
#include "cNode.h"
#include "cLinhas.h"

// ***********************************************
// ******                                   ******
// ***********************************************
cNode::cNode() {

	data 	= "";
	color 	=  "RED";
	parent  =
	left 	= 
	right	= NULL;

}


// ***********************************************
// ******                                   ******
// ***********************************************
cNode::cNode(std::string d, int l) {
  lista = new cLinhas;
	data 	= d;
  	lista->push(l);
	color	= "RED";
	parent  =
	left 	= 
	right	= NULL;

}

cNode::cNode(std::string d){
  lista = new cLinhas;
	data 	= d;
	color	= "RED";
	parent 	=  
	left 	= 
	right	= NULL;
}


// ***********************************************
// ******                                   ******
// ***********************************************
cNode::cNode(const cNode& n) { 

	data 	= n.data;
	color	= n.color;
	parent =  n.parent;
	left 	= n.left;
	right	= n.right;

}

// ***********************************************
// ******                                   ******
// ***********************************************
void cNode::setData(std::string d) {

	data = d;
}

// ***********************************************
// ******                                   ******
// ***********************************************
std::string cNode::getData() {

	return data;
}

///////////////////////////////////////////////////////
/////////////////////////////////////////////////////
///////////////////


void cNode::setLeftChild(cNode* n) {

	left = n;
}

// ***********************************************
// ******                                   ******
// ***********************************************
cNode* cNode::getLeftChild() {

	return left;
}

// ***********************************************
// ******                                   ******
// ***********************************************
cNode** cNode::getRefLeftChild() {

	return &left;
}

// ***********************************************
// ******                                   ******
// ***********************************************
void cNode::setRightChild(cNode* n) {

	right = n;
}

// ***********************************************
// ******                                   ******
// ***********************************************
cNode* cNode::getRightChild() {

	return right;
}

// ***********************************************
// ******                                   ******
// ***********************************************
cNode** cNode::getRefRightChild() {

	return &right;
}

/////////////////////////////////////////////////
//////////////////////////////////////////////////

void cNode::setParent(cNode* n){
	parent = n;

}
//////////////////////////////////////////////////
/////////////////////////////////////////////
cNode* cNode::getParent(){

	return parent;
}

/////////////////////////////////////////////////
///////////////////////////////////////////////

void cNode::setColor(std::string c){

	color = c;
}
// ******************************************************
// ***
// ******************************************************

std::string cNode::getColor(){
	return color;
}
// ******************************************************
// ***
// ******************************************************

cLinhas* cNode::linhas(){
  return lista;
}


// ******************************************************
// ***
// ******************************************************
std::ostream &operator<<( std::ostream &output, const cNode &n ) { 

	output << "===================================" << std::endl;
	output << "dado = " << n.data << std::endl;
	output << "left = " << n.left << std::endl;
	output << "right = " << n.right << std::endl;
	output << "===================================" << std::endl;

	return output;            
}
